{"version":3,"file":"static/js/292.5c3e817d.chunk.js","mappings":"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","sources":["components/schemas/registerSchema.js","components/Forms/Inputs.jsx","pages/Register/Register.jsx"],"sourcesContent":["import * as yup from 'yup';\nconst EMAIL_REGX = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n\nexport const schema = yup.object({\n  name: yup\n    .string()\n    .required('This field is required')\n    .min(3, 'Name should be more than 3 chars')\n    .max(10, 'Name should be less than 10 chars'),\n  email: yup\n    .string()\n    .required('This field is required')\n    .matches(EMAIL_REGX, 'Invalid email address'),\n  password: yup\n    .string()\n    .required('This field is required')\n    .min(8, 'Min length of password is 8 chars'),\n});\n","import React, { useState } from 'react';\nimport { FaEye } from 'react-icons/fa';\nimport { FaEyeSlash } from 'react-icons/fa';\nexport const Inputs = ({\n  register,\n  name,\n  placeholder = 'Enter the text',\n  label,\n  errors,\n  type = 'text',\n}) => {\n  const [showPass, setShowPass] = useState(false);\n\n  return (\n    <div className=\"form-control\">\n      <label className=\"label\">\n        <span className=\"label-text text-[20px] text-primary\">{label}</span>\n      </label>\n      <div className=\"relative\">\n        <input\n          {...register(name)}\n          type={showPass ? 'text' : type}\n          placeholder={placeholder}\n          className=\"input input-bordered input-primary  w-full\"\n        />\n\n        {type === 'password' && (\n          <>\n            <button type=\"button\" onClick={() => setShowPass(prev => !prev)}>\n              {showPass ? (\n                <FaEye className=\"absolute right-4 top-4\" />\n              ) : (\n                <FaEyeSlash className=\"absolute right-4 top-4\" />\n              )}\n            </button>\n            <p className=\"px-2 pt-1 text-red-500\">{errors.password?.message}</p>\n          </>\n        )}\n        {type === 'text' && (\n          <p className=\"px-2 pt-1 text-red-500\">{errors.name?.message}</p>\n        )}\n        {type === 'email' && (\n          <p className=\"px-2 pt-1 text-red-500\">{errors.email?.message}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { schema } from '../../components/schemas/registerSchema';\n\nimport { registerThunk } from '../../redux/operations';\nimport { Inputs } from 'components/Forms/Inputs';\n\nconst Register = () => {\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n  const submit = data => {\n    dispatch(registerThunk(data))\n      .unwrap()\n      .then(toast.success('User was registered successful!'))\n      .catch(error => toast.warning('User was registreted. Please, log in.'));\n    reset();\n  };\n  return (\n    <div className=\"hero h-[calc(100vh_-_80px)]  bg-base-300  \">\n      <div className=\"card shrink-0 w-full max-w-sm shadow-2xl bg-base-100 text-primary italic \">\n        <form\n          className=\"card-body  font-['Oswald'] p-[16px]\"\n          onSubmit={handleSubmit(submit)}\n        >\n          <Inputs\n            register={register}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Type here your name\"\n            errors={errors}\n            label=\"Name\"\n          />\n          <Inputs\n            register={register}\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Type here your email\"\n            errors={errors}\n            label=\"Email\"\n          />\n          <Inputs\n            register={register}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Type here your password\"\n            errors={errors}\n            label=\"Password\"\n          />\n\n          <div className=\"form-control mt-6\">\n            <button className=\"btn btn-primary  text-[18px] \">Register</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["schema","yup","name","required","min","max","email","matches","password","Inputs","_ref","_errors$password","_errors$name","_errors$email","register","_ref$placeholder","placeholder","label","errors","_ref$type","type","_useState","useState","_useState2","_slicedToArray","showPass","setShowPass","_jsxs","className","children","_jsx","_objectSpread","_Fragment","onClick","prev","FaEye","FaEyeSlash","message","_useForm","useForm","resolver","yupResolver","reset","handleSubmit","formState","dispatch","useDispatch","onSubmit","data","registerThunk","unwrap","then","toast","catch","error"],"sourceRoot":""}